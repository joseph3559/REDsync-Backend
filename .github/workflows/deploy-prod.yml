name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://redlecithin.online
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Generate Prisma Client
        run: npm run prisma:generate
        
      - name: Build application
        run: npm run build
        
      - name: Deploy to VPS
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
          DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
          JWT_SECRET: ${{ secrets.PROD_JWT_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PORT: 4000
        run: |
          # Setup SSH
          mkdir -p ~/.ssh
          echo "$VPS_SSH_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H $VPS_HOST >> ~/.ssh/known_hosts
          
          # Create deployment package
          tar -czf deployment.tar.gz \
            --exclude=node_modules \
            dist/ \
            generated/ \
            package.json \
            package-lock.json \
            prisma/ \
            assets/
          
          # Copy files to VPS
          scp -i ~/.ssh/deploy_key deployment.tar.gz $VPS_USER@$VPS_HOST:/var/www/redsync/prod/
          
          # Deploy on VPS
          ssh -i ~/.ssh/deploy_key $VPS_USER@$VPS_HOST "cd /var/www/redsync/prod && \
            tar -xzf deployment.tar.gz && \
            rm deployment.tar.gz && \
            npm ci --only=production && \
            echo \"DATABASE_URL=$DATABASE_URL\" > .env && \
            echo \"JWT_SECRET=$JWT_SECRET\" >> .env && \
            echo \"OPENAI_API_KEY=$OPENAI_API_KEY\" >> .env && \
            echo \"PORT=$PORT\" >> .env && \
            echo \"NODE_ENV=production\" >> .env && \
            npx prisma migrate deploy && \
            mkdir -p uploads/coa uploads/import-export uploads/questionnaires uploads/settings/logos uploads/settings/certifications && \
            mkdir -p processed/questionnaires && \
            (pm2 delete redsync-prod || true) && \
            pm2 start dist/server.js --name redsync-prod --time && \
            pm2 save && \
            echo 'Production deployment completed successfully!'"
          
      - name: Health Check
        run: |
          sleep 5
          curl -f https://redlecithin.online/api/test || exit 1
          
      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Production deployment successful!"
          else
            echo "❌ Production deployment failed!"
            exit 1
          fi

